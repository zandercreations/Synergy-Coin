apiVersion: v1
kind: Service
metadata:
  name: "{{ $.Values.metadata.name }}"
  namespace: "{{ $.Values.metadata.namespace }}"
  {{- if eq $.Values.proxy.provider "ambassador" }}
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v2
      kind: TCPMapping
      name: {{ .Values.metadata.name }}-http
      host: {{ .Values.service.address }}
      port: {{ .Values.service.ports.service }}
      service: {{ .Values.metadata.name }}.{{ .Values.metadata.namespace }}:{{ .Values.service.ports.service }}
      ---
      apiVersion: ambassador/v2
      kind: TCPMapping
      name: {{ .Values.metadata.name }}-api
      host: {{ .Values.service.address }}
      port: {{ .Values.service.ports.endpoint }}
      service: {{ .Values.metadata.name }}.{{ .Values.metadata.namespace }}:{{ .Values.service.ports.endpoint }}
      ---
      apiVersion: ambassador/v2
      kind: TCPMapping
      name: {{ .Values.metadata.name }}-wh
      host: {{ .Values.service.address }}
      port: {{ .Values.service.ports.webhook }}
      service: {{ .Values.metadata.name }}.{{ .Values.metadata.namespace }}:{{ .Values.service.ports.webhook }}
  {{- end }}
spec:
{{ if eq $.Values.proxy.provider "minikube" }}
  type: NodePort
{{ else }}
  type: ClusterIP
{{ end }}
  ports:
  - name: indy-alice-service
    port: {{ $.Values.service.ports.service }}
    targetPort: {{ $.Values.service.ports.service }}
{{ if eq $.Values.proxy.provider "minikube" }}
    nodePort: {{ $.Values.service.ports.service }}
{{ end }}
  - name: indy-alice-endpoint
    port: {{ $.Values.service.ports.endpoint }}
    targetPort: {{ $.Values.service.ports.endpoint }}
{{ if eq $.Values.proxy.provider "minikube" }}
    nodePort: {{ $.Values.service.ports.endpoint }}
{{ end }}
  - name: indy-alice-webhook
    port: {{ $.Values.service.ports.webhook }}
    targetPort: {{ $.Values.service.ports.webhook }}
  selector:
    app: "{{ $.Values.metadata.name }}"
