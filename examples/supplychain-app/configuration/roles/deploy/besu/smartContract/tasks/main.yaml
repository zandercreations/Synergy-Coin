############################################################################################
# Set node_list to empty
- name: Set node_list to empty
  set_fact:
    node_list: []

# This task fetch (org,node) pairs for each validating node present in all organizations of the network
- name: Fetching data of validator nodes in the network from network.yaml
  include_tasks: node_data.yaml
  loop: "{{ network['organizations'] }}"
  loop_control:
    loop_var: org
  when: org.type != "validator"

# Looping on the peers and finding out the peer with a chaincode section
- name: "Deploying the chaincode for peer {{ organization_data.name | lower }}"
  include_tasks: nested_deploy.yaml
  vars:
    smart_contract: "{{ peer.smart_contract }} "
  loop: "{{ organization_data.services.peers }}"
  loop_control:
    loop_var: peer
  when: peer.smart_contract is defined
