##############################################################################################
# This role creates the value file for nms
##############################################################################################

- name: "Wait for namespace creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "Namespace"
    component_name: "{{ component_ns }}"
    type: "retry"
  tags:
    - notest

- name: "Wait for vault-auth creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "ServiceAccount"
    component_name: "vault-auth"
    type: "retry" 
  tags:
    - notest   

- name: "Wait for vault-reviewer creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "ServiceAccount"
    component_name: "vault-reviewer"
    type: "retry"
  tags:
    - notest

- name: "Wait for ClusterRoleBinding creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "ClusterRoleBinding"
    component_name: "{{ component_ns }}-role-tokenreview-binding"
    type: "retry"
  tags:
    - notest
    
# ----------------------------------------------------------------------  
# create vault access policies
- name: "Setup vault for nms"
  include_role: 
    name: setup/vault_kubernetes
  vars:
    component_name: "{{ services.nms.name | lower }}"
    component_path: "{{ services.nms.name | lower }}/"
    component_auth: "corda{{ services.nms.name | lower }}"

# ----------------------------------------------------------------------  
# create image pull secrets
- name: "Create image pull secret for nms" 
  include_role: 
    name: create/imagepullsecret

# generate NMS certificates
- name: "Create certificates for nms" 
  include_role: 
    name: create/certificates/nms
  vars:
    component_name: "{{ services.nms.name | lower }}"
    root_subject: "{{ item.subject }}"
    cert_subject: "{{ item.subject | regex_replace(',', '/') }}"
    nms_subject: "{{ services.nms.subject }}"
    nms_cert_subject: "{{ services.nms.subject | regex_replace(',', '/') }}"
    mongoroot_cert_subj: "{{ services.nms.db_subject }}"

# Create deployment file for nms mongodb node when tls is off
- name: "create mongodb for networkmap"
  include_role:
    name: create/k8_component
  vars:
    component_name: "networkmapmongodb"
    component_type: "mongodb"
    helm_lint: "true"
    charts_dir: "{{ gitops.chart_source}}"
    nodename: "{{ services.nms.name | lower }}"
    component_auth: "corda{{ services.nms.name | lower }}"
    org: "{{ item }}"
    release_dir: "{{ playbook_dir }}/../../../{{ gitops.release_dir }}"
    chart: "mongodb"
  when: services.nms.tls == 'off'

# Create deployment file for nms mongodb node when tls is on
- name: "create mongodb for networkmap"
  include_role:
    name: create/k8_component
  vars:
    component_name: "networkmapmongodb"
    component_type: "mongodb"
    helm_lint: "true"
    charts_dir: "{{ gitops.chart_source}}"
    nodename: "{{ services.nms.name | lower }}"
    component_auth: "corda{{ services.nms.name | lower }}"
    org: "{{ item }}"
    release_dir: "{{ playbook_dir }}/../../../{{ gitops.release_dir }}"
    chart: "mongodb-tls"
  when: services.nms.tls == 'on'


# create deployment file for networkmap node when tls is off
- name: "create nms"
  include_role:
    name: create/k8_component
  vars:
    component_name: "{{ services.nms.name | lower }}"
    component_type: "nms" 
    helm_lint: "true"
    charts_dir: "{{ gitops.chart_source }}"
    component_auth: "corda{{ services.nms.name | lower }}"
    org: "{{ item }}"
    release_dir: "{{ playbook_dir }}/../../../{{ gitops.release_dir }}"
    chart: "nms"
    chart_tls: "false"
  when: services.nms.tls == 'off'

# create deployment file for networkmap node when tls is on
- name: "create nms"
  include_role:
    name: create/k8_component
  vars:
    component_name: "{{ services.nms.name | lower }}"
    component_type: "nms" 
    helm_lint: "true"
    charts_dir: "{{ gitops.chart_source }}"
    component_auth: "corda{{ services.nms.name | lower }}"
    org: "{{ item }}"
    release_dir: "{{ playbook_dir }}/../../../{{ gitops.release_dir }}"
    chart: "nms-tls"
    chart_tls: "true"
  when: services.nms.tls == 'on'


# Push the nms deployment files to repository
- name: "Push the created deployment files to repository"
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    GIT_RESET_PATH: "platforms/r3-corda/configuration"
    msg: "[ci skip] Pushing deployment files for networkmap node and networkmapmongodb node"
    
