---
- name: Prepare for Molecule Test
  hosts: k8s
  gather_facts: no
  vars:
    kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
  tasks:
  - name: Delete the kubeconfig if present
    file:
      path: '{{ kubeconfig }}'
      state: absent
    delegate_to: localhost

  - name: Fetch the kubeconfig
    fetch:
      src: /root/.kube/config
      dest: '{{ kubeconfig }}'
      flat: yes

  - name: Change the kubeconfig port to the proper value
    replace:
      regexp: '8443'
      replace: "{{ lookup('env', 'KIND_PORT') }}"
      path: '{{ kubeconfig }}'
    delegate_to: localhost

  - name: Wait for the Kubernetes API to become available (this could take a minute)
    uri:
      url: "http://localhost:10080/kubernetes-ready"
      status_code: 200
      validate_certs: no
    register: result
    until: (result.status|default(-1)) == 200
    retries: 60
    delay: 5

  - name: Wait for the Vault API to become available (this could take a minute)
    uri:
      url: "http://localhost:9090/ui/"
      status_code: 200
    register: _result
    until: (_result.status|default(-1)) == 200
    retries: 7
    delay: 5
    delegate_to: localhost

  - name: Delete any existing vault secret path
    shell: |
      vault secrets disable secret/
    environment:
      VAULT_ADDR: "http://localhost:9090"
      VAULT_TOKEN: "root"
    delegate_to: localhost
    
  - name: Create/enable new vault secret path
    shell: |
      vault secrets enable -version=1 -path=secret kv
    environment:
      VAULT_ADDR: "http://localhost:9090"
      VAULT_TOKEN: "root"
    changed_when: false
    delegate_to: localhost

  - name: Create testpeer namespace
    shell: |
      kubectl create namespace test-ns
    changed_when: false
    delegate_to: localhost

- hosts: localhost
  connection: local
  tasks:
  - name: Create .build certs
    file:
      path: "./build/certs"
      state: directory

  - name: Create .build certs
    file:
      path: "./build/certs/network-map-truststore.jks"
      state: touch
