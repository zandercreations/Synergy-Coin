#############################################################################################
# This role saves the crypto from Vault into ansible_provisioner
#############################################################################################

# Ensure admincerts directory is present in build
- name: Ensure directory exists
  file:
    path: "{{ cert_path }}"
    state: directory
  
# Save the cert file
- name: Save cert
  local_action: copy content="{{ vault_output['data'].ambassadorcrt | b64decode }}" dest="{{ cert_path }}/ambassador.crt"
  when: type == "ambassador"
  
# Save the key file
- name: Save key
  local_action: copy content="{{ vault_output['data'].ambassadorkey | b64decode }}" dest="{{ cert_path }}/ambassador.key"
  when: type == "ambassador"

- name: Save root keychain
  local_action: copy content="{{ vault_output['data'].rootca | b64decode }}" dest="{{ cert_path }}/rootca.jks"
  when: type == "rootca"

- name: Save root rootcacertpkcs12
  local_action: copy content="{{ vault_output['data'].rootcacertpkcs12 | b64decode }}" dest="{{ cert_path }}/rootcacert.pkcs12"
  when: type == "rootca"

- name: Save root rootcakeypkcs12
  local_action: copy content="{{ vault_output['data'].rootcakeypkcs12 | b64decode }}" dest="{{ cert_path }}/rootcakey.pkcs12"
  when: type == "rootca"

- name: Save root rootcapem
  local_action: copy content="{{ vault_output['data'].rootcapem | b64decode }}" dest="{{ cert_path }}/rootca.pem"
  when: type == "rootca"

- name: Save root rootcakey
  local_action: copy content="{{ vault_output['data'].rootcakey | b64decode }}" dest="{{ cert_path }}/rootca.key"
  when: type == "rootca"
