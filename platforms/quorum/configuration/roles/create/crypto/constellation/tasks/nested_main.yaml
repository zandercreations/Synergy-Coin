# This tasks checks if transaction manager key is already present in the vault
- name: Check tm key is present the vault
  shell: |
    vault read -field=tm.pub {{ vault.secret_path | default('secret') }}/{{ component_ns }}/crypto/{{ node.name }}/transaction
  environment:
    VAULT_ADDR: "{{ vault.url }}"
    VAULT_TOKEN: "{{ vault.root_token }}"
  register: vault_tm_result
  ignore_errors: yes
  tags:
    molecule-idempotence-notest

# This task creates the build directory if it does not exist
- name: "Creating build directory"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/setup"
  vars:
    path: "build/{{ component_name }}/{{ node.name }}"
    check: "ensure_dir"
  when: vault_tm_result.failed == True
  tags:
    molecule-idempotence-notest

- name: Generate Crypto for constellation
  shell: |
    cd build/{{ component_name }}/{{ node.name }}
    printf '\n' | {{ bin_install_dir }}/constellation-node --generatekeys=tm
  when: vault_tm_result.failed == True
  tags:
    molecule-idempotence-notest

- name: Copy the crypto into vault
  shell: |
    vault kv put {{ vault.secret_path | default('secret') }}/{{component_ns}}/crypto/{{ node.name }}/transaction tm.pub="$(cat build/{{ component_name }}/{{ node.name }}/tm.pub)" tm.key="$(cat build/{{ component_name }}/{{ node.name }}/tm.key)"
  environment:
    VAULT_ADDR: "{{ vault.url }}"
    VAULT_TOKEN: "{{ vault.root_token }}"
  when: vault_tm_result.failed == True
  tags:
    molecule-idempotence-notest
