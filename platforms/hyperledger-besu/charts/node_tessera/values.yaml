# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#Provide the number of replicas for pods
#Eg. replicaCount: 1
replicaCount: 1

metadata:
  #Provide the namespace for the Quorum node
  #Eg. namespace: example-quo
  namespace: 
  #Provide the custom labels  
  #NOTE: Provide labels other than name, release name , release service, chart version , chart name, run
  #These lables will not be applied to VolumeClaimTemplate of StatefulSet as labels are automatically picked up by Kubernetes
  #Eg. labels:
  #      role: minter
  labels:

#These are the various docker images being used by this chart. update them as needed
images:  
  #Provide the valid image name and version to read certificates from vault server 
  #Eg. alpineutils: hyperledgerlabs/alpine-utils:1.0
  alpineutils: hyperledgerlabs/alpine-utils:1.0
  #Provide the valid image name and version for tessera
  #Eg. tessera: quorumengineering/tessera:0.9.2
  tessera: quorumengineering/tessera:0.9.2
  #Provide the valid image name and version for busybox
  busybox: busybox
  #Provide the valid image name and version for MySQL. This is used as the DB for TM
  mysql: mysql/mysql-server:5.7
  #Provide the docker secret name in the namespace
  #Eg. imagePullSecret: regcred
  imagePullSecret: regcred

tessera:
  #Provide the name for tessera node
  #Eg. name: node-1
  name: 
  #Provide the mysql DB name
  #Eg. dbname: demodb
  dbname: 
  #Provide the Database URL
  #Eg. dburl: jdbc:mysql://localhost:3306/demodb
  dburl: 
  #Provide the Database username
  #Eg. dbusername: $username
  dbusername:
  #Provide the Database password
  #Eg. dbpassword: $password
  dbpassword:   
  #Provide the tessera node's own url. This should be local. Use http if tls is OFF
  #Eg. url: "https://node1.quo.demo.aws.blockchaincloudpoc.com"
  url: 
  #Provide the list of tessera nodes to connect in url: <value> format. This should be reachable from this node
  #Eg. othernodes: 
  #     - url: "https://node1.quo.demo.aws.blockchaincloudpoc.com"
  #     - url: "https://node2.quo.demo.aws.blockchaincloudpoc.com"
  othernodes: 
  #Provide if tessera will use tls. 
  # Options:
  ##   - STRICT: All connections to and from this node must use TLS with mutual
  ##     authentication. 
  ##   - OFF: Mutually authenticated TLS is not used for in- and outbound
  ##     connections, although unauthenticated connections to HTTPS hosts are
  ##     still possible. This should only be used if another transport security
  ##     mechanism like WireGuard is in place.
  #Eg. tls: 'STRICT'
  tls: 
  #Provide the server/client  trust configuration for constellation nodes. 
  # options are: "WHITELIST", "CA_OR_TOFU", "CA", "TOFU"
  # Eg: trust: "TOFU"
  trust: 
  #Provide the k8s service type
  servicetype: ClusterIP
  #Provide the container and service ports
  ports:    
    tm: 443    
    db: 3306
    client: 15023
  #Provide the mountpath for Quorum pod
  #Eg. mountPath: /etc/tessera/data
  mountPath: 
  #Provide the secret name to be used with TLScontext
  ambassadorSecret:

vault:
  #Provide the Vault Address from where secrets will be read
  #Eg. address: http://vault.internal.demo.aws.blockchaincloudpoc.com:9000
  address: 
  #Provide the Vault secret path from where secrets will be read
  #Eg. secretprefix: secret/org1/crypto/node_1
  secretprefix: 
  #Provide the serviceaccount which is verified with Vault
  #Eg. serviceaccountname: vault-auth
  serviceaccountname: 
  #Provide the key name from where besu secrets will be read
  #Eg. keyname: data
  keyname: 
  #Provide the key name from where transaction-manager secrets will be read
  #Eg. tm_keyname: transaction
  tm_keyname: 
  # Provide the name of the folder containing the tls crypto for orion
  # Eg. tlsdir: tls
  tlsdir: 
  #Provide the service role which is verified with Vault
  #Eg. role: vault-role
  role: 
  #Provide the Vault auth-path which is created for the namespace
  #Eg. authpath: quorumorg1
  authpath:

proxy:
  #This will be the proxy/ingress provider. Can have values "ambassador" or "haproxy"
  # TODO "haproxy" has not been tested
  #Eg. provider: "ambassador"
  provider: "ambassador"
  #This field contains the external URL of the node
  #Eg. external_url: node1.quo.demo.aws.blockchaincloudpoc.com
  external_url: 
  # Following are the ports that are exposed externally via the proxy
  portTM: 15013
  
storage:
  #Provide the kubernetes storageclass for node
  #Eg. storageclassname: awsstorageclass
  storageclassname: 
  #Provide the memory for node
  #Eg. storagesize: 1Gi
  storagesize: 
  #Provide the memory for database
  #Eg. dbstorage: 1Gi
  dbstorage: 
